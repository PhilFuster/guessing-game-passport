extends ./layouts/main-layout.pug
block head-link-list
  +head-links([
    {href: '/stylesheets/css/index.css'}
    ])
block head-script-list
  +head-scripts([
    {src:'/javascripts/index.js'}
  ])
block nav-link-list
  +nav-links([
    {path: '/start', desc: 'Ready?'},
    {path: '/history', desc: 'History'},
    {path: '/auth/logout', desc: 'Logout'}
    ])
  
block content
  main(role="main")
    h1.title.text-md-center Enhancements
    .content.d-none.d-md-flex.flex-grow-1.flex-shrink-1 
      .section.pug
        h2 What is Pug?
        p.
          Pug is a high-performance template engine heavily influenced by Haml and
          implemented with JavaScript for Node.js and browsers.
        p.
          Through out Guessing Game, the ways in which Pug facilitates code reusability
          with features like include, block, extend, and mixin will be highlighted.
      .section.rename-from-jade
        h2 Rename From Jade
        p.
          Pug was formerly known as "jade". However, it was revealed to the
          maintainers that "jade" is a registered trademark; as a result, they had to
          change their name.
        p.
          Maintainers acquired permission to occupy the package name, but future
          releases will be under the name "pug".
      .section.less
        h2 LESS
        p.
          LESS (which stands for Leaner Style Sheets) is a backwards compatible language
          extension for CSS.
          
        p.
          Because Less looks just like CSS, learning is a breeze. Less only makes a
          few convenient additions to the CSS language, which is one of th reasons it
          can be learned so quickly.  
    .accordion(id="contentAccordion" class="d-md-none")
      //- PUG
      .card
        .card-header#pugHeader
          h2.mb-0
            button(class="btn btn-link" type="button" data-toggle="collapse" data-target="#pugDetail") Pug - Node Template Engine
        #pugDetail(class="collapse show" aria-labelledby="pugHeader" data-parent="#contentAccordion")
          .card-body
            p.card-text.
              Pug is a high-performance template engine heavily influenced by Haml and
              implemented with JavaScript for Node.js and browsers.
            p.card-text.
              Through out Guessing Game, the ways in which Pug facilitates code reusability
              with features like include, block, extend, and mixin will be highlighted.
        
      //- Rename from Jade
      .card
        .card-header#renameHeader
          h2.mb-0
            button(class="btn btn-link" type="button" data-toggle="collapse" data-target="#renameDetail") Rename From Jade
        #renameDetail(class="collapse" aria-labelledby="renameHeader" data-parent="#contentAccordion")
          .card-body
            p.card-text.
              Pug was formerly known as "jade". However, it was revealed to the
              maintainers that "jade" is a registered trademark; as a result, they had to
              change their name.
            p.card-text.
              Maintainers acquired permission to occupy the package name, but future
              releases will be under the name "pug".
      .card
        .card-header#lessHeader
          h2.mb-0
            button(class="btn btn-link" type="button" data-toggle="collapse" data-target="#lessDetail") LESS - CSS preprocessor  
        #lessDetail(class="collapse" aria-labelledby="lessHeader" data-parent="#contentAccordion")              
          .card-body
            p.card-text.
              LESS (which stands for Leaner Style Sheets) is backwards compatible language
              extension for CSS.
            p.card-text.
              Because Less looks just like CSS, learning is a breeze. Less only makes a
              few convenient additions to the CSS language, which is one of th reasons it
              can be learned so quickly.
        .modal(class="modal fade" id="login-modal" tabindex="-1" role="dialog" aria-hidden="true")
          .modal-dialog(role="document")
            .modal-content
              .modal-header
                h5.modal-title Modal Title
                button(type="button" class="close" data-dismiss="modal" aria-label="Close")
                  span(aria-hidden="true")
              .modal-body
                p Modal body text goes here.
              .modal-footer
                button(type="button" class="btn btn-secondary" data-dismiss="modal") Close
                button(type="button" class="btn btn-primary" data-dismiss="modal") Save Changes
      footer

              